
Today, I propose the 3 following articles to start your day.

<h3><a href="https://www.youtube.com/watch?v=p5sLx2OTP4M/">6 Impossible Things</a></h3>

This great talk, by Kevlin Henney, dives into six specific impossible things that shape the limits of what we can develop, all the way from the smallest detail of integer representation to the minefield of task estimation and prioritisation, via the uncertainty of distributed systems and the limits of computability.
Once we know our limits, we can work within them to create solutions rather than problems.

<h3><a href="https://inkandvolt.com/blogs/articles/habit-stacking-and-minimum-viable-progress">Habit Stacking and Minimum Viable Progress</a></h3>

Currently, with this series, I am trying to create an habit for myself.
More than sharing what I found interesting online, it helps me struture my digital watch, and hopefully, i will be able to do the same with other aspects of my life.
If you want to do something similar, this article may give you some key points on how to do it.

<h3><a href="https://testing.googleblog.com/2024/05/test-failures-should-be-actionable.html">Test Failures Should Be Actionable</a></h3>

This article contains a huge piece of advice, that can make us gain a lot of time, as we all have encountered errors with poor quality messages, that forces us to take the time replicate them (when it is possible).
And all that time could have been avoided by a better error message. It is true in your client code, as in your test code.

<hr/>

I hope you enjoyed those articles as much as your morning bevrage, and that they gave you some interesting knowledge.
Personnally, I read them while drinking my first cup of coffee of the day &#9749;


Have a splendid day, and see you in the next Morning Code Sip articles. &#128512;

